<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Error_BadRequest" xml:space="preserve">
    <value>The request contains invalid or incorrect details.</value>
  </data>
	<data name="Error_Unauthorized" xml:space="preserve">
    <value>Authorization is required to access this resource.</value>
  </data>
	<data name="Error_Forbidden" xml:space="preserve">
    <value>User does not have permission to access this resource.</value>
  </data>
	<data name="Error_Conflict" xml:space="preserve">
    <value>A conflict occurred with the current state of the resource.</value>
  </data>
	<data name="Error_NotFound" xml:space="preserve">
    <value>The requested resource was not found.</value>
  </data>
	<data name="Error_OperationFailed" xml:space="preserve">
    <value>The operation could not be completed.</value>
  </data>
	<data name="Error_ResourceNotAvailable" xml:space="preserve">
    <value>The resource is not available.</value>
  </data>
	<data name="Error_OperationAcknowledgedButNoChangesMade" xml:space="preserve">
    <value>The operation was acknowledged, but no changes were made. The document(s) may already have the expected values.</value>
  </data>
	<data name="Auth_InvalidCredentials" xml:space="preserve">
    <value>Username or password is not correct.</value>
  </data>
	<data name="Auth_UsernameExists" xml:space="preserve">
    <value>Username already exists.</value>
  </data>
	<data name="Auth_EmailExists" xml:space="preserve">
    <value>Email already exists.</value>
  </data>
	<data name="Validation_Username_Required" xml:space="preserve">
    <value>Username is required.</value>
  </data>
	<data name="Validation_Username_InvalidLength" xml:space="preserve">
    <value>Username must be between 5 and 15 characters.</value>
  </data>
	<data name="Validation_Email_Required" xml:space="preserve">
    <value>Email is required.</value>
  </data>
	<data name="Validation_Email_InvalidFormat" xml:space="preserve">
    <value>The email address format is invalid.</value>
  </data>
	<data name="Validation_Password_Required" xml:space="preserve">
    <value>Password is required.</value>
  </data>
	<data name="Validation_Password_InvalidLength" xml:space="preserve">
    <value>Password must be between 6 and 20 characters.</value>
  </data>
	<data name="Validation_EmailPassword_Required" xml:space="preserve">
    <value>The email password is required.</value>
  </data>
	<data name="Validation_EmailPassword_InvalidLength" xml:space="preserve">
    <value>The email password must be exactly 16 characters long.</value>
  </data>
	<data name="Validation_ConfirmPassword_Required" xml:space="preserve">
    <value>The confirm password field is required and cannot be left empty.</value>
  </data>
	<data name="Validation_ConfirmPassword_Mismatch" xml:space="preserve">
    <value>The confirm password does not match the original password.</value>
  </data>
	<data name="Response_EmailAccount_Added" xml:space="preserve">
    <value>The email account has been successfully added.</value>
  </data>
	<data name="Response_EmailAccount_Removed" xml:space="preserve">
    <value>The email account has been successfully removed.</value>
  </data>
	<data name="Response_EmailPassword_Updated" xml:space="preserve">
    <value>The email password has been successfully updated.</value>
  </data>
	<data name="Response_Operation_Succeeded" xml:space="preserve">
    <value>The operation was successful.</value>
  </data>
	<data name="Error_Operation_Failed" xml:space="preserve">
    <value>The operation has failed.</value>
  </data>
	<data name="Error_Email_FailedRecipient" xml:space="preserve">
    <value>Failed to deliver the email to one or more recipients.</value>
  </data>
	<data name="Error_Email_AuthenticationFailed" xml:space="preserve">
    <value>Authentication failed. The sender email address or password may be incorrect.</value>
  </data>
	<data name="Error_Email_InvalidRecipientAddresses" xml:space="preserve">
    <value>One or more recipient addresses are invalid or unavailable.</value>
  </data>
	<data name="Response_EmailTemplate_Created" xml:space="preserve">
    <value>The email template has been successfully created</value>
  </data>
	<data name="Validation_BodyEmailTemplate_Required" xml:space="preserve">
    <value>Body of email template is required</value>
  </data>
	<data name="Validation_PlaceholdersEmailTemplate_Required" xml:space="preserve">
    <value>Placeholders of email template is required</value>
  </data>
	<data name="Validation_SubjectEmailTemplate_Required" xml:space="preserve">
    <value>Subject of email template is required</value>
  </data>
	<data name="Validation_TemplateName_Required" xml:space="preserve">
    <value>Template name is required</value>
  </data>
	<data name="Validation_UserId_Required" xml:space="preserve">
    <value>UserId is required</value>
  </data>
	<data name="Response_EmailTemplate_Deleted" xml:space="preserve">
    <value>The email template has been deleted successfully</value>
  </data>
	<data name="Response_EmailTemplate_Updated" xml:space="preserve">
    <value>The email template has been updated successfully</value>
  </data>
	<data name="Validation_EmailTemplateId_Required" xml:space="preserve">
    <value>Email template id is required to update resource</value>
  </data>
</root>